-------------------------------------------------------------------------------------------------------------
INCIDENT RESPONSE:
-------------------------------------------------------------------------------------------------------------

Introduction:

    How to respond to incident or issue when occrs. 

-------------------------------------------------------------------------------------------------------------

Case study of hacked servers:

    1. Never trust packaged software. Always download from the source. 
            Ex: Docker images, AMI images.
    2. Attacker redirects the URL to own website.
    3. While visit website, download the malware script and compromise the visitor system.
    4. Encrypt the folders and attacker ask for ransom to share decrypt key (ransomware).
    
    Commonly occur compromise:

        Improper filewall configuration.
        Lack of web application firewall.
        Server hardening is must. 
        File integrity monitoring is must.
        Vulnarability assessment. 
        Patch management. 
        Always scan code.
        Monitor for sudden open port and logs. 

-------------------------------------------------------------------------------------------------------------

AWS Abuse Reports:

    It helps to find "within acceptable use policy (fair use policy)".
    AWS sends abuse report to customers when their aws resources are being used for abusive purposes.
    Abusive purposes includes, Use aws resources for 
        denial of services
        etc 
    Once customer received abuse report, require to respond to email within 24 hrs else aws account will be blocked/suspended. 

-------------------------------------------------------------------------------------------------------------

AWS GUARD DUTY:

    It is thread intelligence service. 
    It monitors multiple log file like DNS logs, VPC flow logs , Cloud trail event logs etc. 
    It gives findings with severities. 
    NOTE: Guard duty will monitor only the Route53 for DNS logs. Active Directory DNS will not be monitored. 

    Limitation:
        It only consider route53 dns logs, vpc flow logs, cloud trail logs, eks audit logs, rds login activity logs. 
        Other logs are cannot be considered.
        To overcome this, can configure other threat detection intelligence.

    Console:
        Guard duty -> Enable 
        Guard duty -> Settings -> Generate sample findings. 

    Whitelisting alerts on Guardduty:
        Trusted IP list - Guardduty doesnot generate findings for IP address on trusted IP lists. 
        Use case: Doing penetration testing from security server , whitelist this IP address. 
        Guardduty -> Lists -> 

    Block IP address:
        Threat list - List of IP address to block. 
    
    Suppress Findings:
        Few findings can be suppressed from occur. 
        Guardduty -> Findings - Suppress findings. 

    Finding Type Lists:
        https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-active.html

    Centralized Dashboard for Guardduty findings: 
        In multi account, enabling and verify at each account is cumbersome process. 
        Member Account 1 to n -> (Send findings) Master Account
        From Master account, Guardduty -> Accounts -> Add accounts by invitation -> (Enter account id and email) 
        From member account, Guardduty -> Accounts -> Accept Invitation. 
        
-------------------------------------------------------------------------------------------------------------

Incident Response: 

    Incident is attempt or actual unauthorized access. 
    Incident response is organized approach aftermath of incident. 
    
    Event driven security response: 
        Based on events, triggers services like lambda which auto remediate. 

    Preventive Services:
        WAF, IAM, Network Firewall, KMS 

    Detective Services:
        Cloud trail, Cloud watch, Inspector, Detective. 
        
-------------------------------------------------------------------------------------------------------------

Exposed aws access keys:

    1. Determine the access associated with the access keys.
    2. Invalidate the credential: 
            Disable the credential - Recommended and retrieve. 
            Delete the credential - Not recommended and not retrieved. 
    3. Check and invalidate the temporary keys which still have access. 
    4. Restore the credential with new credential.
    5. Review the aws account.

Compromised EC2 instance: 


